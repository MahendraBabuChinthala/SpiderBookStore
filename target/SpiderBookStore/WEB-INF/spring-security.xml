<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <beans:import resource="applicationContext.xml"></beans:import>

    <http auto-config="true">
        <access-denied-handler error-page="/403" />
        <intercept-url pattern="/login" access="permitAll()" />
        <intercept-url pattern="/logout" access="permitAll()" />
        <intercept-url pattern="/customerHome" access="permitAll()" />
        <intercept-url pattern="/customerRegistration" access="isAnonymous()"/>
        <intercept-url pattern="/updateCustomerSave" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/deleteCustomer/{email}/customerHome" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/checkOutPage" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/saveOrder" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/getSellerNameBooksData" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/allCustomersData" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/getSingleCustomer" access="hasAnyRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/updateCustomer" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/sellerPortal" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/clientSideBookUpdateToServerSide" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/editBook/{bookId}" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/clientSideBookAddToServerSide" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/sellerAddBook" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/deleteBookById/{bookId}" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/getSellerNameBooksData" access="hasRole('ROLE_CUSTOMER')"/>
        <intercept-url pattern="/addToCart" access="hasRole('ROLE_CUSTOMER')"/>


        <form-login
                login-page="/login"
                default-target-url="/"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-success-url="/login?logout" />
        <csrf/>
    </http>

    <beans:bean id="successHandler" class="com.spiderBooksShopping.successHandler.SuccessHandler"/>

    <beans:bean class="org.springframework.security.crypto.password.NoOpPasswordEncoder" id="passwordEncoder" factory-method="getInstance"/>
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="bookdb"
                               users-by-username-query="SELECT email,password,1 FROM customer WHERE email=?"
                               authorities-by-username-query="SELECT email,role FROM customer WHERE email=?"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>